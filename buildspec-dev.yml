version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "ap-northeast-2"
    TERRAFORM_VERSION: "0.15.3"
    TF_COMMAND: "apply"
    #TF_COMMAND: "destroy"
    JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF8"
  parameter-store:
    USERNAME: "/CodeBuild/DOCKER_ID"
    PASSWORD: "/CodeBuild/DOCKER_PW"
    AWS_ACCESS_KEY_ID: "/CodeBuild/BHHAN_AWS_ACCESS_KEY"
    AWS_SECRET_ACCESS_KEY: "/CodeBuild/BHHAN_AWS_SECRET_KEY"
    TF_VAR_aws_access_key: "/CodeBuild/BHHAN_AWS_ACCESS_KEY"
    TF_VAR_aws_secret_key: "/CodeBuild/BHHAN_AWS_SECRET_KEY"
    TF_VAR_db_url: "/CodeBuild/DB_URL"
    TF_VAR_db_username: "/CodeBuild/DB_USER_NAME"
    TF_VAR_db_password: "/CodeBuild/DB_PASSWORD"
    TF_VAR_username: "/CodeBuild/USER_NAME"
    TF_VAR_password: "/CodeBuild/PASSWORD"

phases:
  install:
    runtime-versions:
      python: latest
      java: latest
    on-failure: ABORT
    commands:
      - tf_version=$TERRAFORM_VERSION
      - wget https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - unzip terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - mv terraform /usr/local/bin/
  pre_build:
    on-failure: ABORT
    commands:
      - echo CodePipeline execution started on `date`
  build:
    on-failure: ABORT
    commands:
      # BUILD DOCKER IMAGE
      #- cd "$CODEBUILD_SRC_DIR"
      #- terraform --version
      #- docker login -u "$USERNAME" -p "$PASSWORD"
      #- ./gradlew buildAndTest
      #- ./gradlew assemble
      #- ./gradlew buildAndPushServerImage
      # DEPLOY DOCKER IMAGE IN ECS CLUSTER
      - cd "$CODEBUILD_SRC_DIR/deploy"
      - terraform init -input=false --backend-config=dev.conf
      - terraform validate
      - terraform plan -input=false -var-file=dev.tfvars
      - terraform $TF_COMMAND -input=false -var-file=dev.tfvars -auto-approve
  post_build:
    on-failure: CONTINUE
    commands:
      - echo CodePipeline execution completed on `date`

